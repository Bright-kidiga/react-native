{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\brigh\\\\Desktop\\\\react\\\\todo1\\\\App.js\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState } from 'react';\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Task from \"./components/Task\";\nexport default function App() {\n  var _this = this;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      task = _useState2[0],\n      setTask = _useState2[1];\n\n  {}\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      taskItems = _useState4[0],\n      setTaskItems = _useState4[1];\n\n  var handleAddTask = function handleAddTask() {\n    Keyboard.dismiss();\n    setTaskItems([].concat(_toConsumableArray(taskItems), [task]));\n    setTask(null);\n  };\n\n  var completeTask = function completeTask(index) {\n    var itemsCopy = _toConsumableArray(taskItems);\n\n    itemsCopy.splice(index, 1);\n    setTaskItems(itemsCopy);\n  };\n\n  return React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.titleWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.sectionTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }, \"Today's task\")), React.createElement(View, {\n    style: styles.taskWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.items,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, taskItems.map(function (item, index) {\n    return React.createElement(TouchableOpacity, {\n      key: index,\n      onPress: function onPress() {\n        return completeTask(index);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 16\n      }\n    }, React.createElement(Task, {\n      text: item,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 18\n      }\n    }));\n  }))), React.createElement(KeyboardAvoidingView, {\n    behavior: Platform.OS === \"ios\" ? \"padding\" : \"height\",\n    style: styles.writeTaskWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: ' Write a task',\n    value: task,\n    onChangeText: function onChangeText(text) {\n      return setTask(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return handleAddTask();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: styles.addWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 14\n    }\n  }, React.createElement(Text, {\n    style: styles.addText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, \"+\"))))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#67C0B7'\n  },\n  taskWrapper: {\n    paddingTop: 40,\n    paddingHorizontal: 20\n  },\n  titleWrapper: {\n    paddingTop: 90,\n    paddingHorizontal: 20\n  },\n  sectionTitle: {\n    fontSize: 40,\n    fontWeight: 'bold',\n    marginBottom: 10\n  },\n  items: {},\n  writeTaskWrapper: {\n    position: 'absolute',\n    bottom: 60,\n    width: '100%',\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    alignItems: 'center'\n  },\n  input: {\n    paddingVertical: 15,\n    paddingHorizontal: 15,\n    backgroundColor: '#fff',\n    borderRadius: 60,\n    borderColor: '#C0C0C0',\n    borderWidth: 1,\n    width: 250\n  },\n  addWrapper: {\n    width: 60,\n    height: 60,\n    backgroundColor: '#fff',\n    borderRadius: 60,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderColor: '#C0C0C0',\n    borderWidth: 1\n  },\n  addText: {\n    fontSize: 30\n  }\n});","map":{"version":3,"sources":["C:/Users/brigh/Desktop/react/todo1/App.js"],"names":["StatusBar","React","useState","Task","App","task","setTask","taskItems","setTaskItems","handleAddTask","Keyboard","dismiss","completeTask","index","itemsCopy","splice","styles","container","titleWrapper","sectionTitle","taskWrapper","items","map","item","Platform","OS","writeTaskWrapper","input","text","addWrapper","addText","StyleSheet","create","flex","backgroundColor","paddingTop","paddingHorizontal","fontSize","fontWeight","marginBottom","position","bottom","width","flexDirection","justifyContent","alignItems","paddingVertical","borderRadius","borderColor","borderWidth","height"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, {useState} from 'react';\nimport { KeyboardAvoidingView, StyleSheet, Text, View, TextInput, TouchableOpacity, Keyboard, ScrollView } from 'react-native';\nimport Task from './components/Task';\n\nexport default function App() {\n  const [task, setTask] = useState();\n{/** we use state for things that change often */}\n  const[taskItems, setTaskItems] = useState([]);\n  const handleAddTask = () => {\n     Keyboard.dismiss();\n     setTaskItems([...taskItems, task])\n     setTask(null);\n  }\n  const completeTask = (index) => {\n     let itemsCopy =[...taskItems];\n     itemsCopy.splice(index, 1);\n     setTaskItems(itemsCopy);\n  }\n  return (\n    <ScrollView>\n    <View style={styles.container}>\n      {/*today's task*/}\n      <View style={styles.titleWrapper}>\n          <Text style={styles.sectionTitle}>Today's task</Text>\n      </View>\n      <View style={styles.taskWrapper}>\n        \n\n        <View style={styles.items}>\n          {/* This is where the task will go*/}\n          {\n            taskItems.map((item, index) => {\n             return (\n               <TouchableOpacity key={index} onPress={() => completeTask(index)}>\n                 <Task  text={item}/>\n               </TouchableOpacity>\n             )\n            })\n          }\n           \n        </View>\n      </View> \n\n        {/* Write a task */}\n        <KeyboardAvoidingView behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\n          style= {styles.writeTaskWrapper}>\n          {/** the keyboard avoiding view pushes the text field and the button up when keyboard is \"activated\" */}\n          <TextInput style={styles.input} placeholder ={' Write a task'} value= {task} onChangeText={text => setTask(text)}/>\n\n          <TouchableOpacity onPress={()=> handleAddTask()}>\n             <View style={styles.addWrapper}>\n                <Text style={styles.addText}>+</Text>\n             </View>\n          </TouchableOpacity>\n        </KeyboardAvoidingView>\n    </View>\n    </ScrollView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#67C0B7',\n    \n  },\n  taskWrapper: {\n    paddingTop: 40,\n    paddingHorizontal: 20, \n  },\n  titleWrapper: {\n    paddingTop: 90,\n    paddingHorizontal: 20, \n  },\n  sectionTitle: {\n    fontSize: 40,\n    fontWeight: 'bold',\n    marginBottom: 10,\n  },\n  items:{},\n  writeTaskWrapper:{\n    position: 'absolute',\n    bottom: 60,\n    width:'100%',\n    flexDirection:'row',\n    justifyContent: 'space-around',\n    alignItems:'center',\n  },\n  input:{\n    paddingVertical:15,\n    paddingHorizontal:15,\n    backgroundColor: '#fff',\n    borderRadius: 60,\n    borderColor: '#C0C0C0',\n    borderWidth: 1,\n    width: 250,\n\n  },\n  addWrapper:{\n    width:60,\n    height:60,\n    backgroundColor:'#fff',\n    borderRadius: 60,\n    justifyContent: 'center',\n    alignItems:'center',\n    borderColor: '#C0C0C0',\n    borderWidth: 1,\n\n  },\n  addText:{\n    fontSize: 30,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}